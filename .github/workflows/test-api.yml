name: Dynamic Tests

on:
  push:
  pull_request:

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff

      - name: Generate matrix of changed game files for PR
        if: github.event_name == 'pull_request'
        id: set-matrix-pr
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_GAMES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep 'src/jaxatari/games/jax_.*\.py' | sed -e 's|src/jaxatari/games/jax_||' -e 's|\.py$||' | jq -R . | jq -cs .)
          echo "matrix={\"game\":$CHANGED_GAMES}" >> $GITHUB_OUTPUT

      - name: Generate matrix of all game files for push
        if: github.event_name == 'push' && github.ref_name == github.event.repository.default_branch
        id: set-matrix-push
        run: |
          cd src/jaxatari/games/
          GAME_MATRIX=$(find . -type f -name "jax_*.py" -printf "%f\n" | sed -e 's/^jax_//' -e 's/\.py$//' | jq -R . | jq -cs .)
          echo "matrix={\"game\":$GAME_MATRIX}" >> $GITHUB_OUTPUT

      - name: Set final matrix
        id: set-matrix
        run: |
          echo "${{ steps.set-matrix-pr.outputs.matrix || steps.set-matrix-push.outputs.matrix }}"
          echo "matrix=${{ steps.set-matrix-pr.outputs.matrix || steps.set-matrix-push.outputs.matrix }}" >> $GITHUB_OUTPUT

  run-tests:
    needs: prepare-matrix
    if: needs.prepare-matrix.outputs.matrix != '[]' && needs.prepare-matrix.outputs.matrix != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        game: ${{ fromJSON(needs.prepare-matrix.outputs.matrix) }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Create venv & install package
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -e ".[gh_ci]"
        shell: bash

      - name: Run tests
        run: |
          echo "Running tests for game: ${{ matrix.game }}"

          . .venv/bin/activate
          pytest --game ${{ matrix.game }} --snapshot-warn-unused --tb=line -ra --color=yes
        shell: bash
